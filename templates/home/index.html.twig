{% extends 'base.html.twig' %}

{% block title %}Home - Spotify-Like{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
    /* Playlist card hover effects */
    .playlist-card:hover {
        background-color: #495057 !important;
        cursor: pointer;
    }

    /* Track list item hover highlighting */
    .track-item:hover {
        background-color: rgba(255,255,255,0.1);
        border-radius: 5px;
        cursor: pointer;
    }

    /* Album card base styling and smooth transitions */
    .album-card {
        transition: transform 0.3s ease;
    }

    .album-card:hover {
        transform: scale(1.05);
        cursor: pointer;
    }

    /* Action buttons with fade-in effect on hover */
    .play-btn-hover {
        opacity: 0;
        transition: opacity 0.3s ease;
        box-shadow: 0 2px 8px rgba(0,0,0,0.3);
        border-radius: 6px !important;
    }

    .album-card:hover .play-btn-hover {
        opacity: 1;
    }

    /* Button sizing and positioning controls */
    .play-btn-hover {
        min-width: 32px !important;
        min-height: 32px !important;
    }

    .play-btn-hover:hover {
        transform: scale(1.05);
    }

    .genre-card {
        height: 100px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: linear-gradient(45deg, #667eea, #764ba2);
        border-radius: 10px;
        color: white;
        text-decoration: none;
        transition: all 0.3s ease;
    }

    .genre-card:hover {
        transform: scale(1.05);
        color: white;
        text-decoration: none;
    }
    </style>
{% endblock %}

{% block body %}
<div class="container-fluid mt-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="display-4 fw-bold">
                        {% if app.user %}
                            Welcome back, {{ app.user.getFirstName() }}!
                        {% else %}
                            Welcome to Spotify-Like
                        {% endif %}
                    </h1>
                </div>
            </div>
        </div>
    </div>

    <!-- Popular Playlists Section -->
    {% if playlists|length > 0 %}
    <div class="row mb-5">
        <div class="col-12">
            <h3 class="mb-4">
                <i class="fas fa-fire text-warning me-2"></i>Popular Playlists
            </h3>
            <div class="row">
                {% for playlist in playlists|slice(0, 6) %}
                    <div class="col-lg-2 col-md-3 col-sm-4 col-6 mb-4">
                        <div class="card playlist-card h-100 position-relative">
                            <div class="card-body p-3">
                                <div class="mb-3">
                                    {% if playlist.tracks|length > 0 and playlist.tracks[0].coverImage %}
                                        <img src="{{ media_cover(playlist.tracks[0].coverImage) }}" 
                                             alt="{{ playlist.name }}" 
                                             class="img-fluid rounded" 
                                             style="width: 100%; height: 120px; object-fit: cover;">
                                    {% else %}
                                        <div class="d-flex align-items-center justify-content-center bg-gradient-primary rounded" 
                                             style="width: 100%; height: 120px; background: linear-gradient(45deg, #667eea, #764ba2);">
                                            <i class="fas fa-music fa-3x text-white"></i>
                                        </div>
                                    {% endif %}
                                </div>
                                <h6 class="card-title text-truncate mb-2">
                                    <a href="#" class="text-white text-decoration-none" 
                                       onclick="event.stopPropagation(); viewPlaylist({{ playlist.id }}); return false;">
                                        {{ playlist.name }}
                                    </a>
                                </h6>
                                <small class="text-muted">
                                    {{ playlist.tracks|length }} tracks
                                    {% if playlist.owner %}
                                        â€¢ by {{ playlist.owner.getFirstName() }}
                                    {% endif %}
                                </small>
                                
                                {# Overlay action buttons (appear on hover) #}
                                <div class="position-absolute bottom-0 end-0 m-2 d-flex gap-1">
                                    {% if playlist.tracks|length > 0 %}
                                        <button class="btn btn-success btn-sm play-btn-hover" 
                                                onclick="playAllFromCard({{ playlist.id }}, '{{ playlist.name|escape('js') }}')"
                                                title="Play All"
                                                style="width: 32px; height: 32px; padding: 0; display: flex; align-items: center; justify-content: center;">
                                            <i class="fas fa-play"></i>
                                        </button>
                                    {% endif %}
                                    <button class="btn btn-info btn-sm play-btn-hover" 
                                            onclick="viewPlaylist({{ playlist.id }})"
                                            title="View Playlist"
                                            style="width: 32px; height: 32px; padding: 0; display: flex; align-items: center; justify-content: center;">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
        </div>
    </div>
    {% endif %}

    <!-- Recent Tracks Section -->
    {% if recentTracks|length > 0 %}
    <div class="row">
        <div class="col-12">
            <h3 class="mb-4">
                <i class="fas fa-clock text-success me-2"></i>Recently Added
            </h3>
            <div class="row">
                {% for track in recentTracks|slice(0, 12) %}
                <div class="col-lg-2 col-md-3 col-sm-4 col-6 mb-4">
                    <div class="card album-card h-100 position-relative">
                        <div class="card-body p-3">
                            {# Cover Image #}
                            {% if track.coverImage %}
                                <img src="{{ media_cover(track.coverImage) }}" 
                                     alt="{{ track.title }}" 
                                     class="img-fluid rounded mb-3" 
                                     style="width: 100%; height: 120px; object-fit: cover;">
                            {% else %}
                                <div class="d-flex align-items-center justify-content-center bg-gradient-primary rounded mb-3" 
                                     style="width: 100%; height: 120px; background: linear-gradient(45deg, #667eea, #764ba2);">
                                    <i class="fas fa-music fa-3x text-white"></i>
                                </div>
                            {% endif %}
                            
                            {# Overlay action buttons (appear on hover) #}
                            <div class="position-absolute bottom-0 end-0 m-2 d-flex gap-1">
                                {% if app.user %}
                                    <button class="btn btn-success btn-sm play-btn-hover" 
                                            onclick="showAddToPlaylistModal({{ track.id }}, '{{ track.title|escape('js') }}', '{{ track.artist|escape('js') }}')"
                                            title="Add to Playlist"
                                            style="width: 32px; height: 32px; padding: 0; display: flex; align-items: center; justify-content: center;">
                                        <i class="fas fa-plus"></i>
                                    </button>
                                {% endif %}
                                <button class="btn btn-success btn-sm play-btn-hover" 
                                        onclick="safePlayTrack('{{ track.audioFile }}', '{{ track.title|escape('js') }}', '{{ track.artist|escape('js') }}', '{{ track.coverImage }}')"
                                        title="Play"
                                        style="width: 32px; height: 32px; padding: 0; display: flex; align-items: center; justify-content: center;">
                                    <i class="fas fa-play"></i>
                                </button>
                            </div>
                            
                            {# Track info with same margin as playlist cards #}
                            <div class="mt-3">
                                <h6 class="text-white mb-1 text-truncate">{{ track.title }}</h6>
                                <small class="text-muted">{{ track.artist }}</small>
                                <br><small class="text-muted">{{ track.createdAt|date('d/m/Y') }}</small>
                            </div>
                        </div>
                    </div>
                </div>
                {% endfor %}
            </div>
        </div>
    </div>
    {% else %}
    <div class="row">
        <div class="col-12">
            <div class="text-center py-4">
                <i class="fas fa-compact-disc fa-3x text-muted mb-3"></i>
                <h5 class="text-muted">No music available yet</h5>
                <p class="text-muted">Be the first to upload music!</p>
                {% if app.user %}
                    <a href="{{ path('app_upload_track') }}" class="btn btn-primary">
                        <i class="fas fa-plus me-2"></i>Upload Your First Track
                    </a>
                {% endif %}
            </div>
        </div>
    </div>
    {% endif %}
</div>

<!-- View Playlist Modal -->
<div class="modal fade" id="viewPlaylistModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content bg-dark">
            <div class="modal-header">
                <h5 class="modal-title">Playlist Details</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-4 text-center">
                        <div id="playlistCoverContainer" class="mb-3">
                            <div class="bg-gradient-primary rounded d-flex align-items-center justify-content-center" 
                                 style="width: 200px; height: 200px; margin: 0 auto; background: linear-gradient(45deg, #667eea, #764ba2);">
                                <i class="fas fa-music fa-4x text-white"></i>
                            </div>
                        </div>
                        <div class="mb-3">
                            <button id="playAllPlaylistBtn" class="btn btn-success btn-lg" style="display: none;">
                                <i class="fas fa-play me-2"></i>Play All
                            </button>
                        </div>
                    </div>
                    <div class="col-md-8">
                        <h3 id="viewPlaylistName">Loading...</h3>
                        <p id="viewPlaylistDescription" class="text-muted">-</p>
                        <div class="mb-3">
                            <small class="text-muted">
                                <i class="fas fa-music me-1"></i><span id="viewPlaylistTracksCount">0</span> tracks â€¢
                                <i class="fas fa-clock me-1"></i><span id="viewPlaylistDuration">0:00</span> â€¢
                                <span id="viewPlaylistStatus">-</span> â€¢
                                Created <span id="viewPlaylistCreated">-</span>
                            </small>
                        </div>
                    </div>
                </div>
                
                <div class="mt-4">
                    <h6>Tracks</h6>
                    <div id="playlistTracksContainer">
                        <div class="text-center">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

{# Add to Playlist Modal #}
<div class="modal fade" id="addToPlaylistModal" tabindex="-1" aria-labelledby="addToPlaylistModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content bg-dark text-white">
            <div class="modal-header border-secondary">
                <h5 class="modal-title" id="addToPlaylistModalLabel">Add to Playlist</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addToPlaylistForm">
                    <input type="hidden" id="trackIdForPlaylist" name="trackId" value="">
                    <div class="mb-3">
                        <label for="playlistSelect" class="form-label">Select Playlist:</label>
                        <select class="form-select bg-dark text-white border-secondary" id="playlistSelect" name="playlistId" required>
                            <option value="">Loading playlists...</option>
                        </select>
                    </div>
                    <div class="text-center">
                        <button type="submit" class="btn btn-success">Add to Playlist</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

{% endblock %}

{% block javascripts %}
<script>
// Set routes for playlist operations
window.homeViewPlaylistRoute = '{{ path('app_home_view_playlist', {'id': '__ID__'}) }}';
window.homeAddTrackToPlaylistRoute = '{{ path('app_library_add_track_to_playlist') }}';
window.homePlaylistsForTrackRoute = '{{ path('app_library_playlists_for_track', {'trackId': '__TRACK_ID__'}) }}';

// View playlist details
function viewPlaylist(playlistId) {
    // Show modal immediately
    const modal = new bootstrap.Modal(document.getElementById('viewPlaylistModal'));
    modal.show();
    
    // Reset content
    document.getElementById('viewPlaylistName').textContent = 'Loading...';
    document.getElementById('viewPlaylistDescription').textContent = '-';
    document.getElementById('viewPlaylistTracksCount').textContent = '0';
    document.getElementById('viewPlaylistDuration').textContent = '0:00';
    document.getElementById('viewPlaylistStatus').textContent = '-';
    document.getElementById('viewPlaylistCreated').textContent = '-';
    document.getElementById('playlistTracksContainer').innerHTML = '<div class="text-center"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div></div>';
    document.getElementById('playAllPlaylistBtn').style.display = 'none';
    
    // Fetch playlist data
    fetch('{{ path('app_home_view_playlist', {'id': '__ID__'}) }}'.replace('__ID__', playlistId))
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const playlist = data.playlist;
                
                // Update playlist info
                document.getElementById('viewPlaylistName').textContent = playlist.name;
                document.getElementById('viewPlaylistDescription').textContent = playlist.description || 'No description';
                document.getElementById('viewPlaylistTracksCount').textContent = playlist.tracks.length;
                document.getElementById('viewPlaylistDuration').textContent = playlist.totalDuration || '0:00';
                document.getElementById('viewPlaylistStatus').textContent = playlist.isPublic ? 'Public' : 'Private';
                document.getElementById('viewPlaylistCreated').textContent = playlist.createdAt;
                
                // Update playlist cover image
                const coverContainer = document.getElementById('playlistCoverContainer');
                if (playlist.coverImage) {
                    coverContainer.innerHTML = `
                        <img src="/media/cover/${playlist.coverImage}" 
                             alt="${playlist.name} cover" 
                             class="img-fluid rounded" 
                             style="width: 200px; height: 200px; object-fit: cover; margin: 0 auto; display: block;">
                    `;
                } else {
                    coverContainer.innerHTML = `
                        <div class="bg-gradient-primary rounded d-flex align-items-center justify-content-center" 
                             style="width: 200px; height: 200px; margin: 0 auto; background: linear-gradient(45deg, #667eea, #764ba2);">
                            <i class="fas fa-list fa-4x text-white"></i>
                        </div>
                    `;
                }
                
                // Show play all button if tracks exist
                if (playlist.tracks.length > 0) {
                    const playAllBtn = document.getElementById('playAllPlaylistBtn');
                    playAllBtn.style.display = 'block';
                    playAllBtn.onclick = () => {
                        window.audioPlayer.playAllFromPlaylist(playlistId, playlist.name, playlist.tracks);
                        modal.hide();
                    };
                }
                
                // Update tracks list
                const tracksContainer = document.getElementById('playlistTracksContainer');
                if (playlist.tracks.length > 0) {
                    let tracksHTML = `
                        <div class="table-responsive">
                            <table class="table table-dark table-hover">
                                <thead>
                                    <tr>
                                        <th width="60">Cover</th>
                                        <th>Title</th>
                                        <th>Artist</th>
                                        <th>Duration</th>
                                        <th width="100">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                    `;
                    
                    playlist.tracks.forEach((track, index) => {
                        tracksHTML += `
                            <tr>
                                <td>
                                    ${track.coverImage ? 
                                        `<img src="/media/cover/${track.coverImage}" alt="${track.title}" class="rounded" style="width: 40px; height: 40px; object-fit: cover;">` :
                                        `<div class="bg-gradient-primary rounded d-flex align-items-center justify-content-center" style="width: 40px; height: 40px; background: linear-gradient(45deg, #667eea, #764ba2);">
                                            <i class="fas fa-music text-white"></i>
                                        </div>`
                                    }
                                </td>
                                <td><strong>${track.title}</strong></td>
                                <td>${track.artist}</td>
                                <td>${track.duration}</td>
                                <td>
                                    <button class="btn btn-outline-info btn-sm" 
                                            onclick="safePlayTrack('${track.audioFile}', '${track.title.replace(/'/g, '&apos;')}', '${track.artist.replace(/'/g, '&apos;')}', '${track.coverImage || ''}')"
                                            title="Play">
                                        <i class="fas fa-play"></i>
                                    </button>
                                </td>
                            </tr>
                        `;
                    });
                    
                    tracksHTML += '</tbody></table></div>';
                    tracksContainer.innerHTML = tracksHTML;
                } else {
                    tracksContainer.innerHTML = '<div class="text-center text-muted"><i class="fas fa-music fa-3x mb-3"></i><p>This playlist is empty</p></div>';
                }
            } else {
                showToast('Error loading playlist: ' + data.error, 'error');
            }
        })
        .catch(error => {
            showToast('An error occurred while loading the playlist', 'error');
            console.error('Error:', error);
        });
}

// Placeholder functions that will be implemented if needed
function showAddToPlaylistModal(trackId, title, artist) {
    // Set track ID in hidden field
    document.getElementById('trackIdForPlaylist').value = trackId;
    
    // Load user's playlists
    const playlistSelect = document.getElementById('playlistSelect');
    playlistSelect.innerHTML = '<option value="">Loading playlists...</option>';
    
    // Get playlists for track to show which ones already contain this track
    const url = window.homePlaylistsForTrackRoute.replace('__TRACK_ID__', trackId);
    
    fetch(url, {
        headers: {
            'X-Requested-With': 'XMLHttpRequest'
        }
    })
    .then(response => response.json())
    .then(data => {
        if (data.success && data.playlists) {
            playlistSelect.innerHTML = '<option value="">Select a playlist...</option>';
            
            data.playlists.forEach(playlist => {
                const option = document.createElement('option');
                option.value = playlist.id;
                
                if (playlist.hasTrack) {
                    option.textContent = `${playlist.name} (Already added)`;
                    option.disabled = true;
                    option.style.color = '#6c757d';
                } else {
                    option.textContent = playlist.name;
                }
                
                playlistSelect.appendChild(option);
            });
        } else {
            playlistSelect.innerHTML = '<option value="">No playlists found</option>';
        }
    })
    .catch(error => {
        console.error('Error loading playlists:', error);
        playlistSelect.innerHTML = '<option value="">Error loading playlists</option>';
    });
    
    // Show modal
    const modal = new bootstrap.Modal(document.getElementById('addToPlaylistModal'));
    modal.show();
}

// Add form submission handler
document.addEventListener('DOMContentLoaded', function() {
    const addToPlaylistForm = document.getElementById('addToPlaylistForm');
    if (addToPlaylistForm) {
        addToPlaylistForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            const trackId = document.getElementById('trackIdForPlaylist').value;
            const playlistId = document.getElementById('playlistSelect').value;
            
            if (!playlistId) {
                showToast('Please select a playlist', 'warning');
                return;
            }
            
            // Call add track to playlist function
            addTrackToPlaylist(trackId, playlistId);
        });
    }
});

// Add track to playlist function
function addTrackToPlaylist(trackId, playlistId) {
    const formData = new FormData();
    formData.append('trackId', trackId);
    formData.append('playlistId', playlistId);
    
    fetch(window.homeAddTrackToPlaylistRoute, {
        method: 'POST',
        body: formData,
        headers: {
            'X-Requested-With': 'XMLHttpRequest'
        }
    })
    .then(response => {
        console.log('Response status:', response.status);
        console.log('Response headers:', response.headers);
        
        // Check if response is OK
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        // Get the response text first to check if it's valid JSON
        return response.text();
    })
    .then(text => {
        console.log('Response text:', text);
        
        // Try to parse as JSON
        try {
            const data = JSON.parse(text);
            return data;
        } catch (e) {
            console.error('Failed to parse JSON:', e);
            console.error('Response was:', text);
            throw new Error('Invalid JSON response from server');
        }
    })
    .then(data => {
        if (data.success) {
            // Close modal
            bootstrap.Modal.getInstance(document.getElementById('addToPlaylistModal')).hide();
            
            // Show success message
            showToast('Track added to playlist successfully!', 'success');
        } else {
            showToast('Error adding track to playlist: ' + (data.error || data.message), 'error');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        showToast('An error occurred while adding the track to playlist: ' + error.message, 'error');
    });
}
</script>
{% endblock %}